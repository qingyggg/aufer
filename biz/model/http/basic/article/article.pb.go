// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v5.29.1
// source: article.proto

package article

import (
	article "github.com/qingyggg/aufer/biz/model/cmd/article"
	common "github.com/qingyggg/aufer/biz/model/cmd/common"
	_ "github.com/qingyggg/aufer/biz/model/http/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Note     string `protobuf:"bytes,1,opt,name=note,proto3" form:"note" json:"note,required" query:"note"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,required" query:"title"`
	CoverUrl string `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" form:"cover_url" json:"cover_url,required" query:"cover_url"`
	Content  string `protobuf:"bytes,4,opt,name=content,proto3" form:"content" json:"content,required" query:"content"`
	MyUid    string `protobuf:"bytes,5,opt,name=myUid,proto3" form:"myUid" json:"my_uid,required" query:"myUid"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{0}
}

func (x *PublishRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PublishRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PublishRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *PublishRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PublishRequest) GetMyUid() string {
	if x != nil {
		return x.MyUid
	}
	return ""
}

type ModRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Note     string `protobuf:"bytes,1,opt,name=note,proto3" form:"note" json:"note,required" query:"note"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,required" query:"title"`
	CoverUrl string `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" form:"cover_url" json:"cover_url,required" query:"cover_url"`
	Content  string `protobuf:"bytes,4,opt,name=content,proto3" form:"content" json:"content,required" query:"content"`
	Aid      string `protobuf:"bytes,5,opt,name=aid,proto3" form:"aid" json:"aid,required" query:"aid"`
}

func (x *ModRequest) Reset() {
	*x = ModRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModRequest) ProtoMessage() {}

func (x *ModRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModRequest.ProtoReflect.Descriptor instead.
func (*ModRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{1}
}

func (x *ModRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ModRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ModRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ModRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

type Aid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid string `protobuf:"bytes,1,opt,name=aid,proto3" form:"aid" json:"aid,required" query:"aid"`
}

func (x *Aid) Reset() {
	*x = Aid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aid) ProtoMessage() {}

func (x *Aid) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aid.ProtoReflect.Descriptor instead.
func (*Aid) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{2}
}

func (x *Aid) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

// 文章卡片列表
type CardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId    string   `protobuf:"bytes,1,opt,name=authorId,proto3" form:"authorId" json:"authorId" query:"authorId"` //作者id
	Offset      int32    `protobuf:"varint,2,opt,name=offset,proto3" form:"offset" json:"offset" query:"offset"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags,proto3" form:"tags" json:"tags" query:"tags"`                                                   //文章标签
	Category    string   `protobuf:"bytes,4,opt,name=category,proto3" form:"category" json:"category" query:"category"`                                   //文章种类
	Type        int32    `protobuf:"varint,5,opt,name=type,proto3" form:"type" json:"type" query:"type" vd:"$==1 || $==2"`                                //1->请求最新的 2->请求最热门的
	IsCollected bool     `protobuf:"varint,6,opt,name=is_collected,json=isCollected,proto3" form:"is_collected" json:"is_collected" query:"is_collected"` //是否为该用户收藏的文章
	Uid         string   `protobuf:"bytes,7,opt,name=uid,proto3" form:"uid" json:"uid" query:"uid"`                                                       //用户id
}

func (x *CardsRequest) Reset() {
	*x = CardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsRequest) ProtoMessage() {}

func (x *CardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsRequest.ProtoReflect.Descriptor instead.
func (*CardsRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{3}
}

func (x *CardsRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *CardsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CardsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CardsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CardsRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CardsRequest) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *CardsRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type CollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid  string `protobuf:"bytes,1,opt,name=aid,proto3" form:"aid" json:"aid,required" query:"aid"`                        //文章的id
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" form:"type" json:"type,required" query:"type" vd:"$==1 || $==2"` // 1-collect, 2-Uncollect
}

func (x *CollectRequest) Reset() {
	*x = CollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectRequest) ProtoMessage() {}

func (x *CollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectRequest.ProtoReflect.Descriptor instead.
func (*CollectRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{4}
}

func (x *CollectRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *CollectRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   string `protobuf:"bytes,1,opt,name=aid,proto3" form:"aid" json:"aid,required" query:"aid"`          //文章的id
	Uid   string `protobuf:"bytes,2,opt,name=uid,proto3" form:"uid" json:"uid,required" query:"uid"`          //作者的id
	MyUid string `protobuf:"bytes,3,opt,name=myUid,proto3" form:"myUid" json:"my_uid,required" query:"myUid"` //用户的id，可能为guest
}

func (x *DetailRequest) Reset() {
	*x = DetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailRequest) ProtoMessage() {}

func (x *DetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailRequest.ProtoReflect.Descriptor instead.
func (*DetailRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{5}
}

func (x *DetailRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *DetailRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DetailRequest) GetMyUid() string {
	if x != nil {
		return x.MyUid
	}
	return ""
}

type FavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid  string `protobuf:"bytes,1,opt,name=cid,proto3" form:"cid" json:"cid,required" query:"cid"`
	Aid  string `protobuf:"bytes,2,opt,name=aid,proto3" form:"aid" json:"aid,required" query:"aid"`
	Type int32  `protobuf:"varint,3,opt,name=type,proto3" form:"type" json:"type,required" query:"type" vd:"$==1 || $==2"`
}

func (x *FavoriteRequest) Reset() {
	*x = FavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteRequest) ProtoMessage() {}

func (x *FavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteRequest.ProtoReflect.Descriptor instead.
func (*FavoriteRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{6}
}

func (x *FavoriteRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FavoriteRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *FavoriteRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

var File_article_proto protoreflect.FileDescriptor

var file_article_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x1a, 0x10, 0x72,
	0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x94, 0x02, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e,
	0x6f, 0x74, 0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x19, 0xca, 0xf3, 0x18, 0x15, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xca, 0xf3, 0x18, 0x19, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x2c, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1b, 0xca, 0xf3, 0x18, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x79, 0x55, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xca, 0xf3, 0x18, 0x16, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x6d, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x52, 0x05, 0x6d, 0x79, 0x55, 0x69, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x0a, 0x4d, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x6e, 0x6f, 0x74, 0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xca, 0xf3, 0x18, 0x15, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xca, 0xf3, 0x18, 0x19,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x2c,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xca, 0xf3, 0x18, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x22, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x61, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x03,
	0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x1f, 0xda, 0xbb, 0x18, 0x0c,
	0x24, 0x3d, 0x3d, 0x31, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3d, 0x3d, 0x32, 0xca, 0xf3, 0x18, 0x0b,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x61, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x03,
	0x61, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x28, 0xda, 0xbb, 0x18, 0x0c, 0x24, 0x3d, 0x3d, 0x31, 0x20, 0x7c, 0x7c, 0x20, 0x24,
	0x3d, 0x3d, 0x32, 0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x79, 0x70,
	0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x69, 0x64, 0x2c,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18,
	0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x79, 0x55,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xca, 0xf3, 0x18, 0x16, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x52, 0x05, 0x6d, 0x79, 0x55, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x0f,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3,
	0x18, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x61, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x28, 0xda, 0xbb, 0x18, 0x0c, 0x24, 0x3d, 0x3d, 0x31, 0x20, 0x7c, 0x7c,
	0x20, 0x24, 0x3d, 0x3d, 0x32, 0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74,
	0x79, 0x70, 0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x32, 0xf3, 0x05, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x4f, 0x72, 0x4d, 0x6f, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xd2, 0xc1, 0x18, 0x08,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x62, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x4d,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x4f, 0x72, 0x4d, 0x6f, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c,
	0xda, 0xc1, 0x18, 0x08, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x4d, 0x0a, 0x10,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x11, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e,
	0x41, 0x69, 0x64, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe2,
	0xc1, 0x18, 0x08, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x4e, 0x0a, 0x0d, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x11, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x41, 0x69, 0x64, 0x1a,
	0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xca,
	0xc1, 0x18, 0x08, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x58, 0x0a, 0x0b, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x11, 0xd2, 0xc1, 0x18, 0x0d, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x12, 0x11, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x41, 0x69, 0x64, 0x1a,
	0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0xd2, 0xc1, 0x18, 0x17, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x12, 0x5e, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x14, 0xd2, 0xc1, 0x18, 0x10, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x61, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x15, 0xd2, 0xc1, 0x18, 0x11, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x2f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x69, 0x6e, 0x67, 0x79, 0x67, 0x67, 0x67,
	0x2f, 0x61, 0x75, 0x66, 0x65, 0x72, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_article_proto_rawDescOnce sync.Once
	file_article_proto_rawDescData = file_article_proto_rawDesc
)

func file_article_proto_rawDescGZIP() []byte {
	file_article_proto_rawDescOnce.Do(func() {
		file_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_article_proto_rawDescData)
	})
	return file_article_proto_rawDescData
}

var file_article_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_article_proto_goTypes = []interface{}{
	(*PublishRequest)(nil),                 // 0: http.publish.PublishRequest
	(*ModRequest)(nil),                     // 1: http.publish.ModRequest
	(*Aid)(nil),                            // 2: http.publish.Aid
	(*CardsRequest)(nil),                   // 3: http.publish.CardsRequest
	(*CollectRequest)(nil),                 // 4: http.publish.CollectRequest
	(*DetailRequest)(nil),                  // 5: http.publish.DetailRequest
	(*FavoriteRequest)(nil),                // 6: http.publish.FavoriteRequest
	(*article.PubOrModActionResponse)(nil), // 7: rpc.article.PubOrModActionResponse
	(*common.BaseResponse)(nil),            // 8: rpc.common.BaseResponse
	(*article.ArticleResponse)(nil),        // 9: rpc.article.ArticleResponse
	(*article.CardsResponse)(nil),          // 10: rpc.article.CardsResponse
}
var file_article_proto_depIdxs = []int32{
	0,  // 0: http.publish.PublishHandler.PublishAction:input_type -> http.publish.PublishRequest
	1,  // 1: http.publish.PublishHandler.PublishModifyAction:input_type -> http.publish.ModRequest
	2,  // 2: http.publish.PublishHandler.PublishDelAction:input_type -> http.publish.Aid
	2,  // 3: http.publish.PublishHandler.PublishDetail:input_type -> http.publish.Aid
	3,  // 4: http.publish.PublishHandler.PublishList:input_type -> http.publish.CardsRequest
	2,  // 5: http.publish.PublishHandler.PublishViewCountAdd:input_type -> http.publish.Aid
	4,  // 6: http.publish.PublishHandler.PublishCollect:input_type -> http.publish.CollectRequest
	6,  // 7: http.publish.PublishHandler.PublishFavorite:input_type -> http.publish.FavoriteRequest
	7,  // 8: http.publish.PublishHandler.PublishAction:output_type -> rpc.article.PubOrModActionResponse
	7,  // 9: http.publish.PublishHandler.PublishModifyAction:output_type -> rpc.article.PubOrModActionResponse
	8,  // 10: http.publish.PublishHandler.PublishDelAction:output_type -> rpc.common.BaseResponse
	9,  // 11: http.publish.PublishHandler.PublishDetail:output_type -> rpc.article.ArticleResponse
	10, // 12: http.publish.PublishHandler.PublishList:output_type -> rpc.article.CardsResponse
	8,  // 13: http.publish.PublishHandler.PublishViewCountAdd:output_type -> rpc.common.BaseResponse
	8,  // 14: http.publish.PublishHandler.PublishCollect:output_type -> rpc.common.BaseResponse
	8,  // 15: http.publish.PublishHandler.PublishFavorite:output_type -> rpc.common.BaseResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_article_proto_init() }
func file_article_proto_init() {
	if File_article_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_proto_goTypes,
		DependencyIndexes: file_article_proto_depIdxs,
		MessageInfos:      file_article_proto_msgTypes,
	}.Build()
	File_article_proto = out.File
	file_article_proto_rawDesc = nil
	file_article_proto_goTypes = nil
	file_article_proto_depIdxs = nil
}
