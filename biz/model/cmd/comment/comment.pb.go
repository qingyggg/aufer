// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.1
// source: rpc/comment.proto

package comment

import (
	context "context"
	"github.com/qingyggg/aufer/biz/model/cmd/common"
	"github.com/qingyggg/aufer/biz/model/cmd/user"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid           string         `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Aid           string         `protobuf:"bytes,2,opt,name=aid,proto3" json:"aid,omitempty"`                                           //文章的id
	User          *user.UserBase `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                         // comment user information
	Content       string         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                   // comment
	CreateDate    string         `protobuf:"bytes,5,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`           // comment publication date, format mm-dd
	FavoriteCount int64          `protobuf:"varint,6,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty"` //该评论获得的点赞数量
	ChildNum      int64          `protobuf:"varint,7,opt,name=child_num,json=childNum,proto3" json:"child_num,omitempty"`                //该评论被回复的数量，当为一级评论时候，显示数量，二级的时候，显示为0
	RepliedUid    string         `protobuf:"bytes,8,opt,name=replied_uid,json=repliedUid,proto3" json:"replied_uid,omitempty"`           //如果该评论为某评论的回复，则该字段为被回复的用户的hashID
	IsFavorite    bool           `protobuf:"varint,9,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Comment) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *Comment) GetUser() *user.UserBase {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *Comment) GetFavoriteCount() int64 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

func (x *Comment) GetChildNum() int64 {
	if x != nil {
		return x.ChildNum
	}
	return 0
}

func (x *Comment) GetRepliedUid() string {
	if x != nil {
		return x.RepliedUid
	}
	return ""
}

func (x *Comment) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type CmtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid     string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`         //父亲评论的id
	Aid     string `protobuf:"bytes,2,opt,name=aid,proto3" json:"aid,omitempty"`         //文章的id
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` //评论内容
	Degree  int32  `protobuf:"varint,4,opt,name=degree,proto3" json:"degree,omitempty"`  //评论等级，只能为1或者2
	Uid     string `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`         //键盘侠的id
}

func (x *CmtRequest) Reset() {
	*x = CmtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtRequest) ProtoMessage() {}

func (x *CmtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtRequest.ProtoReflect.Descriptor instead.
func (*CmtRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CmtRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CmtRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *CmtRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CmtRequest) GetDegree() int32 {
	if x != nil {
		return x.Degree
	}
	return 0
}

func (x *CmtRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid  string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"` //评论id
	Aid  string `protobuf:"bytes,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Type int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` //1:删除文章所有评论 2:删除该评论以及所有子评论
	Uid  string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`    //键盘侠的id
}

func (x *DelRequest) Reset() {
	*x = DelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRequest) ProtoMessage() {}

func (x *DelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRequest.ProtoReflect.Descriptor instead.
func (*DelRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{2}
}

func (x *DelRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *DelRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *DelRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DelRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type FavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid  string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Uid  string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Aid  string `protobuf:"bytes,4,opt,name=aid,proto3" json:"aid,omitempty"`
}

func (x *FavoriteRequest) Reset() {
	*x = FavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteRequest) ProtoMessage() {}

func (x *FavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteRequest.ProtoReflect.Descriptor instead.
func (*FavoriteRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{3}
}

func (x *FavoriteRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FavoriteRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FavoriteRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FavoriteRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

type CardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid    string `protobuf:"bytes,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid    string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`        //父亲评论的Id
	Degree int32  `protobuf:"varint,3,opt,name=degree,proto3" json:"degree,omitempty"` //1:请求一级评论 2：请求二级评论
	MyUid  string `protobuf:"bytes,4,opt,name=myUid,proto3" json:"myUid,omitempty"`    //键盘侠的id
}

func (x *CardsRequest) Reset() {
	*x = CardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsRequest) ProtoMessage() {}

func (x *CardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsRequest.ProtoReflect.Descriptor instead.
func (*CardsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{4}
}

func (x *CardsRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *CardsRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CardsRequest) GetDegree() int32 {
	if x != nil {
		return x.Degree
	}
	return 0
}

func (x *CardsRequest) GetMyUid() string {
	if x != nil {
		return x.MyUid
	}
	return ""
}

type CmtCtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid string `protobuf:"bytes,1,opt,name=aid,proto3" json:"aid,omitempty"`
}

func (x *CmtCtRequest) Reset() {
	*x = CmtCtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtCtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtCtRequest) ProtoMessage() {}

func (x *CmtCtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtCtRequest.ProtoReflect.Descriptor instead.
func (*CmtCtRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{5}
}

func (x *CmtCtRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

type CmtsCtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aids []string `protobuf:"bytes,1,rep,name=aids,proto3" json:"aids,omitempty"`
}

func (x *CmtsCtRequest) Reset() {
	*x = CmtsCtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtsCtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtsCtRequest) ProtoMessage() {}

func (x *CmtsCtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtsCtRequest.ProtoReflect.Descriptor instead.
func (*CmtsCtRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{6}
}

func (x *CmtsCtRequest) GetAids() []string {
	if x != nil {
		return x.Aids
	}
	return nil
}

type CardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *common.BaseResponse `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	List []*Comment           `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` // return comment list
}

func (x *CardsResponse) Reset() {
	*x = CardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsResponse) ProtoMessage() {}

func (x *CardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsResponse.ProtoReflect.Descriptor instead.
func (*CardsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{7}
}

func (x *CardsResponse) GetBase() *common.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CardsResponse) GetList() []*Comment {
	if x != nil {
		return x.List
	}
	return nil
}

type CmtActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *common.BaseResponse `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Cid  string               `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *CmtActionResponse) Reset() {
	*x = CmtActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtActionResponse) ProtoMessage() {}

func (x *CmtActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtActionResponse.ProtoReflect.Descriptor instead.
func (*CmtActionResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{8}
}

func (x *CmtActionResponse) GetBase() *common.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CmtActionResponse) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type CmtCtMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *common.BaseResponse `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CtMap map[string]int64     `protobuf:"bytes,2,rep,name=ctMap,proto3" json:"ctMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CmtCtMapResponse) Reset() {
	*x = CmtCtMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtCtMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtCtMapResponse) ProtoMessage() {}

func (x *CmtCtMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtCtMapResponse.ProtoReflect.Descriptor instead.
func (*CmtCtMapResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{9}
}

func (x *CmtCtMapResponse) GetBase() *common.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CmtCtMapResponse) GetCtMap() map[string]int64 {
	if x != nil {
		return x.CtMap
	}
	return nil
}

type CmtCtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *common.BaseResponse `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Count int64                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CmtCtResponse) Reset() {
	*x = CmtCtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtCtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtCtResponse) ProtoMessage() {}

func (x *CmtCtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtCtResponse.ProtoReflect.Descriptor instead.
func (*CmtCtResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{10}
}

func (x *CmtCtResponse) GetBase() *common.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CmtCtResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_rpc_comment_proto protoreflect.FileDescriptor

var file_rpc_comment_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x10, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x22, 0x74, 0x0a, 0x0a, 0x43,
	0x6d, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x56, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x0f, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x79, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x79, 0x55, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x43, 0x6d, 0x74, 0x43,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x0d, 0x43, 0x6d,
	0x74, 0x73, 0x43, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x69, 0x64, 0x73, 0x22,
	0x67, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x11, 0x43, 0x6d, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0xba, 0x01,
	0x0a, 0x10, 0x43, 0x6d, 0x74, 0x43, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x05, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6d,
	0x74, 0x43, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x74, 0x4d, 0x61, 0x70,
	0x1a, 0x38, 0x0a, 0x0a, 0x43, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x0d, 0x43, 0x6d,
	0x74, 0x43, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32,
	0xd1, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6d, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6d, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6d, 0x74, 0x43, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6d, 0x74, 0x43, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6d, 0x74, 0x73, 0x43, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6d, 0x74, 0x43, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x71, 0x69, 0x6e, 0x67, 0x79, 0x67, 0x67, 0x67, 0x2f, 0x61, 0x75, 0x66, 0x65, 0x72,
	0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_comment_proto_rawDescOnce sync.Once
	file_rpc_comment_proto_rawDescData = file_rpc_comment_proto_rawDesc
)

func file_rpc_comment_proto_rawDescGZIP() []byte {
	file_rpc_comment_proto_rawDescOnce.Do(func() {
		file_rpc_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_comment_proto_rawDescData)
	})
	return file_rpc_comment_proto_rawDescData
}

var file_rpc_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_rpc_comment_proto_goTypes = []interface{}{
	(*Comment)(nil),             // 0: rpc.comment.Comment
	(*CmtRequest)(nil),          // 1: rpc.comment.CmtRequest
	(*DelRequest)(nil),          // 2: rpc.comment.DelRequest
	(*FavoriteRequest)(nil),     // 3: rpc.comment.FavoriteRequest
	(*CardsRequest)(nil),        // 4: rpc.comment.CardsRequest
	(*CmtCtRequest)(nil),        // 5: rpc.comment.CmtCtRequest
	(*CmtsCtRequest)(nil),       // 6: rpc.comment.CmtsCtRequest
	(*CardsResponse)(nil),       // 7: rpc.comment.CardsResponse
	(*CmtActionResponse)(nil),   // 8: rpc.comment.CmtActionResponse
	(*CmtCtMapResponse)(nil),    // 9: rpc.comment.CmtCtMapResponse
	(*CmtCtResponse)(nil),       // 10: rpc.comment.CmtCtResponse
	nil,                         // 11: rpc.comment.CmtCtMapResponse.CtMapEntry
	(*user.UserBase)(nil),       // 12: rpc.user.UserBase
	(*common.BaseResponse)(nil), // 13: rpc.common.BaseResponse
}
var file_rpc_comment_proto_depIdxs = []int32{
	12, // 0: rpc.comment.Comment.user:type_name -> rpc.user.UserBase
	13, // 1: rpc.comment.CardsResponse.base:type_name -> rpc.common.BaseResponse
	0,  // 2: rpc.comment.CardsResponse.list:type_name -> rpc.comment.Comment
	13, // 3: rpc.comment.CmtActionResponse.base:type_name -> rpc.common.BaseResponse
	13, // 4: rpc.comment.CmtCtMapResponse.base:type_name -> rpc.common.BaseResponse
	11, // 5: rpc.comment.CmtCtMapResponse.ctMap:type_name -> rpc.comment.CmtCtMapResponse.CtMapEntry
	13, // 6: rpc.comment.CmtCtResponse.base:type_name -> rpc.common.BaseResponse
	1,  // 7: rpc.comment.CommentHandler.CommentAction:input_type -> rpc.comment.CmtRequest
	2,  // 8: rpc.comment.CommentHandler.CommentDelAction:input_type -> rpc.comment.DelRequest
	4,  // 9: rpc.comment.CommentHandler.CommentList:input_type -> rpc.comment.CardsRequest
	3,  // 10: rpc.comment.CommentHandler.CommentFavorite:input_type -> rpc.comment.FavoriteRequest
	5,  // 11: rpc.comment.CommentHandler.CommentCount:input_type -> rpc.comment.CmtCtRequest
	6,  // 12: rpc.comment.CommentHandler.CommentCounts:input_type -> rpc.comment.CmtsCtRequest
	8,  // 13: rpc.comment.CommentHandler.CommentAction:output_type -> rpc.comment.CmtActionResponse
	13, // 14: rpc.comment.CommentHandler.CommentDelAction:output_type -> rpc.common.BaseResponse
	7,  // 15: rpc.comment.CommentHandler.CommentList:output_type -> rpc.comment.CardsResponse
	13, // 16: rpc.comment.CommentHandler.CommentFavorite:output_type -> rpc.common.BaseResponse
	10, // 17: rpc.comment.CommentHandler.CommentCount:output_type -> rpc.comment.CmtCtResponse
	9,  // 18: rpc.comment.CommentHandler.CommentCounts:output_type -> rpc.comment.CmtCtMapResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_rpc_comment_proto_init() }
func file_rpc_comment_proto_init() {
	if File_rpc_comment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtCtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtsCtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtCtMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtCtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_comment_proto_goTypes,
		DependencyIndexes: file_rpc_comment_proto_depIdxs,
		MessageInfos:      file_rpc_comment_proto_msgTypes,
	}.Build()
	File_rpc_comment_proto = out.File
	file_rpc_comment_proto_rawDesc = nil
	file_rpc_comment_proto_goTypes = nil
	file_rpc_comment_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.12.3. DO NOT EDIT.

type CommentHandler interface {
	CommentAction(ctx context.Context, req *CmtRequest) (res *CmtActionResponse, err error)
	CommentDelAction(ctx context.Context, req *DelRequest) (res *common.BaseResponse, err error)
	CommentList(ctx context.Context, req *CardsRequest) (res *CardsResponse, err error)
	CommentFavorite(ctx context.Context, req *FavoriteRequest) (res *common.BaseResponse, err error)
	CommentCount(ctx context.Context, req *CmtCtRequest) (res *CmtCtResponse, err error)
	CommentCounts(ctx context.Context, req *CmtsCtRequest) (res *CmtCtMapResponse, err error)
}
