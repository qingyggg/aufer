definitions:
  article.Article:
    properties:
      author:
        $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_cmd_user.User'
      content:
        type: string
      info:
        $ref: '#/definitions/article.ArticleInfo'
    type: object
  article.ArticleCard:
    properties:
      author:
        $ref: '#/definitions/user.UserBase'
      info:
        $ref: '#/definitions/article.ArticleInfo'
    type: object
  article.ArticleInfo:
    properties:
      aid:
        type: string
      collect_count:
        type: integer
      comment_count:
        description: total number of comments on the video
        type: integer
      cover_url:
        type: string
      created_date:
        type: string
      is_collect:
        type: boolean
      is_favorite:
        description: true-Liked，false-did not like
        type: boolean
      last_modified_date:
        type: string
      like_count:
        description: total number of likes for the video
        type: integer
      note:
        type: string
      title:
        type: string
      viewed_count:
        type: integer
    type: object
  article.ArticleResponse:
    properties:
      article:
        $ref: '#/definitions/article.Article'
      base:
        $ref: '#/definitions/common.BaseResponse'
    type: object
  article.CardsResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      list:
        items:
          $ref: '#/definitions/article.ArticleCard'
        type: array
    type: object
  article.PubOrModActionResponse:
    properties:
      aid:
        type: string
      base:
        $ref: '#/definitions/common.BaseResponse'
    type: object
  comment.CardsResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      list:
        description: return comment list
        items:
          $ref: '#/definitions/comment.Comment'
        type: array
    type: object
  comment.CmtActionResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      cid:
        type: string
    type: object
  comment.Comment:
    properties:
      aid:
        description: 文章的id
        type: string
      child_num:
        description: 该评论被回复的数量，当为一级评论时候，显示数量，二级的时候，显示为0
        type: integer
      cid:
        type: string
      content:
        description: comment
        type: string
      create_date:
        description: comment publication date, format mm-dd
        type: string
      favorite_count:
        description: 该评论获得的点赞数量
        type: integer
      is_favorite:
        type: boolean
      replied_uid:
        description: 如果该评论为某评论的回复，则该字段为被回复的用户的hashID
        type: string
      user:
        allOf:
        - $ref: '#/definitions/user.UserBase'
        description: comment user information
    type: object
  common.BaseResponse:
    properties:
      serviceTime:
        type: integer
      statusCode:
        type: integer
      statusMsg:
        type: string
    type: object
  common.UploadResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      fileUrl:
        description: 文件存储的URL
        type: string
    type: object
  favorite.FavoriteRequest:
    properties:
      aid:
        type: string
      cid:
        type: string
      type:
        type: integer
    type: object
  github_com_qingyggg_aufer_biz_model_cmd_user.User:
    properties:
      base:
        $ref: '#/definitions/user.UserBase'
      info:
        $ref: '#/definitions/user.UserInfo'
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_article.Aid:
    properties:
      aid:
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_article.CardsRequest:
    properties:
      authorId:
        description: 作者id
        type: string
      category:
        description: 文章种类
        type: string
      is_collected:
        description: 是否为该用户收藏的文章
        type: boolean
      offset:
        type: integer
      tags:
        description: 文章标签
        items:
          type: string
        type: array
      type:
        description: 1->请求最新的 2->请求最热门的
        type: integer
      uid:
        description: 用户id
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_article.CollectRequest:
    properties:
      aid:
        description: 文章的id
        type: string
      type:
        description: 1-collect, 2-Uncollect
        type: integer
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_article.FavoriteRequest:
    properties:
      aid:
        type: string
      cid:
        type: string
      type:
        type: integer
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_article.PublishRequest:
    properties:
      content:
        type: string
      cover_url:
        type: string
      my_uid:
        type: string
      note:
        type: string
      title:
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_user.LoginOrRegRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_user.ProfileModRequest:
    properties:
      avatar:
        description: user avatar URL
        type: string
      background_image:
        description: image at the top of the user's personal page
        type: string
      name:
        description: user name
        type: string
      signature:
        description: user profile
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_basic_user.PwdModRequest:
    properties:
      email:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_interact_comment.CardsRequest:
    properties:
      aid:
        type: string
      cid:
        type: string
      degree:
        description: 1:请求一级评论 2：请求二级评论
        type: integer
      my_uid:
        type: string
      type:
        description: 1.根据热度 2.根据时间先后
        type: integer
    type: object
  github_com_qingyggg_aufer_biz_model_http_interact_comment.CmtRequest:
    properties:
      aid:
        description: 文章的id
        type: string
      content:
        description: 评论内容
        type: string
      degree:
        description: 评论等级，只能为1或者2
        type: integer
      pid:
        type: string
    type: object
  github_com_qingyggg_aufer_biz_model_http_interact_comment.DelRequest:
    properties:
      aid:
        type: string
      cid:
        description: 评论id or "null"
        type: string
      type:
        description: 1:删除文章所有评论 2:删除该评论以及所有子评论
        type: integer
    type: object
  github_com_qingyggg_aufer_biz_model_http_social_relation.FollowRequest:
    properties:
      type:
        description: 1-Follow, 2-Unfollow
        type: integer
      uid:
        type: string
    type: object
  relation.ListResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      list:
        description: User information list
        items:
          $ref: '#/definitions/user.UserBase'
        type: array
    type: object
  user.UserActionResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      puid:
        description: 用以存储cookie的user主键
        type: integer
      uid:
        type: string
    type: object
  user.UserBase:
    properties:
      avatar:
        description: user avatar URL
        type: string
      background_image:
        description: image at the top of the user's personal page
        type: string
      created_date:
        type: string
      email:
        type: string
      name:
        description: user name
        type: string
      signature:
        description: user profile
        type: string
      uid:
        description: hash id
        type: string
    type: object
  user.UserInfo:
    properties:
      follow_count:
        description: total number of people the user follows
        type: integer
      follower_count:
        description: total number of fans
        type: integer
      is_follow:
        description: whether the currently logged-in user follows this user
        type: boolean
      total_favorited:
        description: number of articles for articles published by user
        type: integer
      work_count:
        description: number of articles published by user
        type: integer
    type: object
  user.UserResponse:
    properties:
      base:
        $ref: '#/definitions/common.BaseResponse'
      user:
        allOf:
        - $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_cmd_user.User'
        description: User Info
    type: object
info:
  description: "Aufer API 文档"
  version: "1.0.0"
  title: "Aufer API"
  contact:
    email: "team@aufer.dev"
basePath: "/"
schemes:
  - "https"
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /ping:
    get:
      description: 测试服务器连接
      produces:
      - application/json
      responses: {}
      summary: 测试服务器连接
      tags:
      - Ping
  /publish:
    delete:
      consumes:
      - application/json
      description: 用户删除已发布的文章
      parameters:
      - description: 文章ID参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.Aid'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功返回信息
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 删除已发布文章
      tags:
      - 文章操作
    get:
      consumes:
      - application/json
      description: 根据文章ID获取文章的详细内容
      parameters:
      - description: 文章ID
        in: query
        name: Aid
        required: true
        type: integer
      - description: 作者用户ID
        in: query
        name: Uid
        type: integer
      - description: 当前登录用户ID
        in: query
        name: MyUid
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 文章详情返回信息
          schema:
            $ref: '#/definitions/article.ArticleResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 获取文章详细信息
      tags:
      - 文章操作
    post:
      consumes:
      - application/json
      description: 用户发布新的文章内容
      parameters:
      - description: 文章发布请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.PublishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 发布成功返回信息
          schema:
            $ref: '#/definitions/article.PubOrModActionResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 发布新文章
      tags:
      - 文章操作
    put:
      consumes:
      - application/json
      description: 用户修改已发布的文章内容
      parameters:
      - description: 文章修改请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.PublishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功返回信息
          schema:
            $ref: '#/definitions/article.PubOrModActionResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 修改已发布文章
      tags:
      - 文章操作
  /publish/collect:
    post:
      consumes:
      - application/json
      description: 用户对文章进行收藏或取消收藏操作
      parameters:
      - description: 收藏请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.CollectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功返回信息
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 收藏或取消收藏文章
      tags:
      - 文章操作
  /publish/comment:
    delete:
      consumes:
      - application/json
      description: 通过ID删除已存在的评论
      parameters:
      - description: 评论删除信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_interact_comment.DelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "403":
          description: 禁止访问
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "404":
          description: 评论未找到
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 删除评论
      tags:
      - 评论
    post:
      consumes:
      - application/json
      description: 为特定文章或帖子创建新评论
      parameters:
      - description: 评论创建信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_interact_comment.CmtRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应，包含评论ID
          schema:
            $ref: '#/definitions/comment.CmtActionResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 创建新评论
      tags:
      - 评论
  /publish/comment/favorite:
    post:
      consumes:
      - application/json
      description: 点赞评论
      parameters:
      - description: 评论收藏信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/favorite.FavoriteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "404":
          description: 评论未找到
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 点赞评论
      tags:
      - 评论
  /publish/comment/list:
    post:
      consumes:
      - application/json
      description: 返回特定文章或帖子的评论列表
      parameters:
      - description: 评论列表参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_interact_comment.CardsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应，包含评论列表
          schema:
            $ref: '#/definitions/comment.CardsResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "404":
          description: 评论未找到
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 获取评论列表
      tags:
      - 评论
  /publish/favorite:
    post:
      consumes:
      - application/json
      description: 用户对文章进行点赞或取消点赞操作
      parameters:
      - description: 点赞请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.FavoriteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功返回信息
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 点赞或取消点赞文章
      tags:
      - 文章操作
  /publish/list:
    post:
      consumes:
      - application/json
      description: 根据条件筛选获取文章列表
      parameters:
      - description: 文章列表查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.CardsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 文章列表返回信息
          schema:
            $ref: '#/definitions/article.CardsResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 获取文章列表
      tags:
      - 文章操作
  /publish/view_count_add:
    post:
      consumes:
      - application/json
      description: 记录文章被浏览一次，增加浏览计数
      parameters:
      - description: 文章ID参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_article.Aid'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功返回信息
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 增加文章浏览计数
      tags:
      - 文章操作
  /relation/follow:
    post:
      consumes:
      - application/json
      description: 关注或者取关用户
      parameters:
      - description: 用户关注信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_social_relation.FollowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 关注或者取关用户
      tags:
      - 用户关系
  /relation/follow/list:
    get:
      consumes:
      - application/json
      description: 用户关注列表或者被关注列表
      parameters:
      - description: 用户关注或被关注列表请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_social_relation.FollowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/relation.ListResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 用户关注列表或者被关注列表
      tags:
      - 用户关系
  /upload/file:
    post:
      consumes:
      - multipart/form-data
      description: 用户可以通过该接口上传文件
      parameters:
      - description: 上传的文件
        in: formData
        name: file
        required: true
        type: file
      - description: 上传的类型，是头像还是背景图片
        in: formData
        name: file_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回文件信息
          schema:
            $ref: '#/definitions/common.UploadResponse'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 上传文件
      tags:
      - 文件上传接口
  /user:
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户的详细信息
      parameters:
      - description: 要查询的用户ID
        in: query
        name: uid
        required: true
        type: string
      - description: 当前登录用户ID，不提供则默认为guest
        in: query
        name: my_uid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 获取用户信息
      tags:
      - 用户管理
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户使用邮箱和密码登录系统
      parameters:
      - description: 用户登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_user.LoginOrRegRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功返回的用户信息
          schema:
            $ref: '#/definitions/user.UserActionResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 邮箱或密码错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 用户登录
      tags:
      - 用户管理
  /user/profile_mod:
    post:
      consumes:
      - application/json
      description: 用户修改个人资料信息，包括头像、背景图片、签名和名称
      parameters:
      - description: 用户资料修改信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_user.ProfileModRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 资料修改成功返回的用户信息
          schema:
            $ref: '#/definitions/user.UserActionResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 未授权，用户未登录
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 修改用户资料
      tags:
      - 用户管理
  /user/pwd_mod:
    post:
      consumes:
      - application/json
      description: 用户修改自己的登录密码
      parameters:
      - description: 密码修改信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_user.PwdModRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 密码修改成功返回的用户信息
          schema:
            $ref: '#/definitions/user.UserActionResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: 旧密码验证失败
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 修改用户密码
      tags:
      - 用户管理
  /user/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账号
      parameters:
      - description: 用户注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_qingyggg_aufer_biz_model_http_basic_user.LoginOrRegRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功返回的用户信息
          schema:
            $ref: '#/definitions/user.UserActionResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "409":
          description: 邮箱已被注册
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 用户注册
      tags:
      - 用户管理
swagger: "2.0"
